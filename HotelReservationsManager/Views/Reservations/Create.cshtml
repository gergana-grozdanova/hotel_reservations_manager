@model HotelReservationsManager.Dtos.Reservations.InputReservationDto;

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Reservation</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="AccommodationDate" class="control-label"></label>
                <input asp-for="AccommodationDate" class="form-control" />
                <span asp-validation-for="AccommodationDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LeavingDate" class="control-label"></label>
                <input asp-for="LeavingDate" class="form-control" />
                <span asp-validation-for="LeavingDate" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsBreakfastIncluded" /> @Html.DisplayNameFor(model => model.IsBreakfastIncluded)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsAllInclusive" /> @Html.DisplayNameFor(model => model.IsAllInclusive)
                </label>
            </div>
             @*<div class="form-group">
                @Html.LabelFor(model=> model.RoomCapacity) 
                @Html.DropDownListFor(model=>model.RoomCapacity,new SelectList(@Model.RoomCapacity),new { @class = "form-control"})
                <span asp-validation-for="RoomCapacity" class="text-danger"></span>
            </div>*@
            <div class="form-group">
               @for (var i = 0; i < Model.Clients.Count(); i++)
               {
                   <h2>Person @(i+1)</h2>
                   <div class="form-floating">
                     <input asp-for="@Model.Clients[@i].Firstname" class="form-control"  aria-required="true" />
                    <label asp-for="@Model.Clients[@i].Firstname" class="form-label"></label>
                   
                </div>
                <div class="form-floating">
                    <input asp-for="@Model.Clients[@i].Lastname" class="form-control"  aria-required="true" />
                    <label asp-for="@Model.Clients[@i].Lastname" class="form-label"></label>
                
                </div> 
                
                <div class="form-floating">
                    <input asp-for="@Model.Clients[@i].PhoneNumber" class="form-control"  aria-required="true" />
                    <label asp-for="@Model.Clients[@i].PhoneNumber" class="form-label"></label>
                
                </div> 

                <div class="form-floating">
                    <input asp-for="@Model.Clients[@i].Email" class="form-control"  aria-required="true" />
                    <label asp-for="@Model.Clients[@i].Email" class="form-label"></label>
                   
                </div>

                 <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="@Model.Clients[@i].IsAdult" /> @Html.DisplayNameFor(model => model.Clients[@i].IsAdult)
                </label>
                </div>
               }
                
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");

    }
}
